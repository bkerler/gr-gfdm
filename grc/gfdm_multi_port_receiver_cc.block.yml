id: gfdm_multi_port_receiver_cc
label: Multi port receiver
category: "[gfdm]"

templates:
  imports: import gfdm
  make: gfdm.multi_port_receiver_cc(${num_antenna_ports}, ${timeslots}, ${subcarriers}, ${active_subcarriers}, ${overlap}, ${subcarrier_map}, ${cp_len}, ${cs_len}, ${frequency_domain_taps}, ${map_resources_per_timeslot}, ${preamble}, ${channel_estimator_id}, ${symbol_constellation}, ${ic_iterations}, ${activate_phase_compensation}, ${activate_cfo_compensation}, ${sync_tag_key})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
  - id: num_antenna_ports
    label: Antenna ports
    dtype: int
  - id: timeslots
    label: Timeslots
    dtype: int
    default: 15
  - id: subcarriers
    label: Subcarriers
    dtype: int
    default: 64
  - id: active_subcarriers
    label: Active subcarriers
    dtype: int
    default: 60
  - id: overlap
    label: Overlap
    dtype: int
    default: 2
  - id: subcarrier_map
    label: Subcarrier map
    dtype: int_vector
    default: list(range(1, 61))
  - id: cp_len
    label: CP length
    dtype: int
    default: 16
  - id: cs_len
    label: CS length
    dtype: int
    default: 8
  - id: frequency_domain_taps
    label: Freq. domain taps
    dtype: complex_vector
    default: "[1.0 + 0.0j, ] * 30"
  - id: map_resources_per_timeslot
    label: Resources per timeslot
    dtype: bool
    default: True
  - id: constellation
    label: Constellation object
    dtype: raw
  - id: preamble
    label: Core preamble
    dtype: complex_vector
    default: "[1.0 + 0.0j, ] * 128"
  - id: channel_estimator_id
    label: Channel estimator ID
    dtype: int
    default: 1
  - id: ic_iterations
    label: IC iterations
    dtype: int
    default: 1
  - id: activate_phase_compensation
    label: Activate phase compensation
    dtype: bool
    default: True
  - id: activate_cfo_compensation
    label: Activate CFO compensation
    dtype: bool
    default: True
  - id: sync_tag_key
    label: Sync tag key
    dtype: string
    default: '"frame_start"'

#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
  - domain: stream
    dtype: complex
    multiplicity: ${ num_antenna_ports }

outputs:
  - domain: stream
    dtype: complex
    multiplicity: ${ num_antenna_ports }
  - label: estimate
    domain: stream
    dtype: complex
    optional: true
    multiplicity: ${ num_antenna_ports }
  - label: frame
    domain: stream
    dtype: complex
    optional: true
    multiplicity: ${ num_antenna_ports }

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
