/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(cyclic_prefixer_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(d50b520216efad19413a796bf67eba2a)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gfdm/cyclic_prefixer_cc.h>
// pydoc.h is automatically generated in the build directory
#include <cyclic_prefixer_cc_pydoc.h>

void bind_cyclic_prefixer_cc(py::module& m)
{

    using cyclic_prefixer_cc = ::gr::gfdm::cyclic_prefixer_cc;


    py::class_<cyclic_prefixer_cc,
               gr::block,
               gr::basic_block,
               std::shared_ptr<cyclic_prefixer_cc>>(
        m, "cyclic_prefixer_cc", D(cyclic_prefixer_cc))

        .def(py::init(&cyclic_prefixer_cc::make),
             py::arg("block_len"),
             py::arg("cp_len"),
             py::arg("cs_len"),
             py::arg("ramp_len"),
             py::arg("window_taps"),
             D(cyclic_prefixer_cc, make))


        ;
}
