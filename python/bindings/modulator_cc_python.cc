/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(modulator_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(fc7b1a528f706188125893d3846a7666)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gfdm/modulator_cc.h>
// pydoc.h is automatically generated in the build directory
#include <modulator_cc_pydoc.h>

void bind_modulator_cc(py::module& m)
{

    using modulator_cc = ::gr::gfdm::modulator_cc;


    py::class_<modulator_cc,
               gr::tagged_stream_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<modulator_cc>>(m, "modulator_cc", D(modulator_cc))

        .def(py::init(&modulator_cc::make),
             py::arg("nsubcarrier"),
             py::arg("ntimeslots"),
             py::arg("filter_alpha"),
             py::arg("fft_len"),
             py::arg("sync_fft_len"),
             py::arg("len_tag_key") = "frame_len",
             D(modulator_cc, make))


        ;
}
